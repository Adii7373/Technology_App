<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/searchlol"
    tools:context=".Android_knowledge">


    <TextView
        android:layout_width="367dp"
        android:layout_height="90dp"
        android:layout_marginStart="16dp"
        android:layout_marginBottom="624dp"
        android:background="#000"
        android:fontFamily="@font/adamina"
        android:text="Android knowledge"
        android:textColor="#ffff"
        android:textSize="35dp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <ImageView
        android:id="@+id/imageView2"
        android:layout_width="316dp"
        android:layout_height="201dp"
        android:layout_marginStart="44dp"
        android:layout_marginBottom="408dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:srcCompat="@drawable/android" />

    <ScrollView
        android:layout_width="409dp"
        android:layout_height="406dp"
        tools:layout_editor_absoluteX="1dp"
        tools:layout_editor_absoluteY="324dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical" />

    </ScrollView>

    <TextView
        android:id="@+id/textView3"
        android:layout_width="405dp"
        android:layout_height="405dp"
        android:text="Kotlin has emerged as the preferred language for Android development due to its interoperability with Java and concise syntax. Its robust type system promotes null safety and reduces the risk of runtime errors. Kotlin's support for coroutines simplifies asynchronous programming, enhancing app performance. Extension functions enable developers to augment existing classes with new functionalities seamlessly. Android Studio offers extensive support for Kotlin, facilitating code completion, refactoring, and debugging. With official endorsement from Google since 2017, Kotlin's adoption continues to grow steadily. Its gentle learning curve, vibrant community, and abundant learning resources make it accessible to developers. Kotlin offers comparable performance to Java, sometimes even better, thanks to its optimizations. Gradual adoption allows integration into existing projects without extensive rewrites. Powerful tooling and IDE integration enhance development productivity. Expressive syntax fosters concise and readable code, improving developer efficiency. Kotlin's support for multiplatform development enables code sharing across different platforms. Functional programming paradigms promote modular and maintainable codebases. Endorsed by Google, Kotlin ensures continued support and evolution in Android development. Its rich ecosystem of community plugins extends its functionality and simplifies common tasks. Investing in Kotlin future-proofs Android projects, ensuring they remain modern and adaptable."
        android:textStyle="bold"
        android:textSize="18dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />


</androidx.constraintlayout.widget.ConstraintLayout>